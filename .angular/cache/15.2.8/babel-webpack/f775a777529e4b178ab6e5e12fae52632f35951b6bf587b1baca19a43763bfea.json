{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ChatComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r1);\n  }\n}\nfrom;\n'socket.io-client';\nexport class ChatComponent {\n  constructor() {\n    this.messages = [];\n    this.newMessage = '';\n    this.socket = io('http://localhost:8080');\n    this.socket.on('message', data => {\n      this.messages.push(data);\n    });\n  }\n  sendMessage() {\n    if (this.newMessage) {\n      this.socket.emit('message', this.newMessage);\n      this.newMessage = '';\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)();\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Type a message...\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Chat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChatComponent_div_3_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.newMessage = $event;\n      })(\"keyup.enter\", function ChatComponent_Template_input_keyup_enter_4_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":";;;;IAEIA,2BAAsC;IAAAA,YAAa;IAAAA,iBAAM;;;;IAAnBA,eAAa;IAAbA,gCAAa;;;ACD5CC,IAAI;AAAC,kBAAkB;AAOlC,OAAM,MAAOC,aAAa;EAKxBC;IAHA,aAAQ,GAAa,EAAE;IACvB,eAAU,GAAW,EAAE;IAGrB,IAAI,CAACC,MAAM,GAAGC,EAAE,CAAC,uBAAuB,CAAC;IACzC,IAAI,CAACD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAGC,IAAY,IAAI;MACzC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ;EAEAG,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACP,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAE,IAAI,CAACD,UAAU,CAAC;MAC5C,IAAI,CAACA,UAAU,GAAG,EAAE;;EAExB;;AAjBWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BjB,2BAAK;MACGA,oBAAI;MAAAA,iBAAK;MACbA,8DAAyD;MACzDA,gCAAgG;MAAzFA;QAAA;MAAA,EAAwB;QAAA,OAAgDkB,iBAAa;MAAA,EAA7D;MAA/BlB,iBAAgG;;;MADvEA,eAAW;MAAXA,sCAAW;MAC7BA,eAAwB;MAAxBA,wCAAwB","names":["i0","from","ChatComponent","constructor","socket","io","on","data","messages","push","sendMessage","newMessage","emit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Michal\\Desktop\\projekt\\chat-app\\src\\app\\chat\\chat.component.html","C:\\Users\\Michal\\Desktop\\projekt\\chat-app\\src\\app\\chat\\chat.component.ts"],"sourcesContent":["<div>\n    <h2>Chat</h2>\n    <div *ngFor=\"let message of messages\">{{ message }}</div>\n    <input [(ngModel)]=\"newMessage\" placeholder=\"Type a message...\" (keyup.enter)=\"sendMessage()\" />\n  </div>","import { Component } from '@angular/core';\nimport {}} from 'socket.io-client' \n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent {\n  private socket: any;\n  messages: string[] = [];\n  newMessage: string = '';\n\n  constructor() {\n    this.socket = io('http://localhost:8080');\n    this.socket.on('message', (data: string) => {\n      this.messages.push(data);\n    });\n  }\n\n  sendMessage() {\n    if (this.newMessage) {\n      this.socket.emit('message', this.newMessage);\n      this.newMessage = '';\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}